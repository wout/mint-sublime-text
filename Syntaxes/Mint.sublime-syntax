%YAML 1.2
---
name: Mint
file_extensions:
  - mint
scope: source.mint

variables:
  variable: '[a-z][A-Za-z_0-9]*'

contexts:
  main:
    - include: comments
    - include: html

    - match: '\b[A-Z]\w*(\.[A-Z]\w*)*\b'
      scope: constant.other

    - match: \b(let|await|global|state|const|encode|decode|for|module|provider|suite|test|case|catch|next|with|component|property|fun|routes|get|connect|exposing|record|store|use|when|if|else|where|enum)\b
      scope: keyword.control

    - match: \{|\}
      scope: meta.brackets

    - match: '"'
      push: string

    - match: \bstyle\b(?!=)
      scope: keyword.control
      set:
        - match: '{{variable}}'
          scope: entity.name.function

        - match: (?=\{)
          set: css_body

  comments:
    - match: /\*\*(?!/)
      scope: punctuation.definition.comment.begin.js
      push:
        - meta_include_prototype: false
        - meta_scope: comment.block.documentation.js
        - match: \*/
          scope: punctuation.definition.comment.end.js
          pop: true
    - match: /\*
      scope: punctuation.definition.comment.begin.js
      push:
        - meta_include_prototype: false
        - meta_scope: comment.block.js
        - match: \*/
          scope: punctuation.definition.comment.end.js
          pop: true
    - match: '//'
      scope: punctuation.definition.comment.mint
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.double-slash.mint
        - match: $\n?
          pop: true

  css_body:
    - match: '(\b[A-Za-z_0-9-]+):'
      captures:
        1: meta.selector.css

    - match: '\{(.*)\}'

    - match: '\}'
      pop: true

  string:
    - meta_scope: string.quoted.double.c
    - match: \\.
      scope: constant.character.escape.c
    - match: '"'
      pop: true
